#!/usr/bin/env python -i

import objc

DVTFoundation = objc.loadBundle('DVTFoundation', globals(), "/Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework")
CSServiceClient = objc.loadBundle("CSServiceClient", globals(), "/Applications/Xcode.app/Contents/SharedFrameworks/CSServiceClient.framework")
IDEFoundation = objc.loadBundle("IDEFoundation", globals(), "/Applications/Xcode.app/Contents/Frameworks/IDEFoundation.framework")
Xcode3Core = objc.loadBundle('Xcode3Core', globals(), "/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin")

objc.loadBundleFunctions(IDEFoundation, globals(), [('IDEInitialize', objc._C_VOID + objc._C_NSUInteger + objc._C_PTR + objc._C_ID)], False)

IDEInitialize(1, None)

project = PBXProject.alloc().init()
project.setForceWriteToFileSystem_(True)
project.setLastUpgradeCheck_(u'0500')
project.setPath_(u'/Users/toulouse/code/ATToolkit/Tools/Test.xcodeproj')
project.setClassPrefix_(u'AT')
project.setOrganizationName_(u'Andrew Toulouse')
project.createDefaultProjectSettingsConfigurationsIfNeeded()

target = PBXNativeTarget.alloc().initWithName_productTypeIdentifier_(u'NativeTarget', u'com.apple.product-type.application')
project.addTarget_(target)

for buildConfiguration in project.buildConfigurationList().buildConfigurations():
	pass
#target = PBXTarget.alloc().initWithName_productTypeIdentifier_templateDictionary_baseDirectoryPath_(u'TargetName', u'se.atoulou.synthesized', )


written = project.writeToFileSystemProjectFile_userFile_checkNeedsRevert_(True, False, False)
print "written? ", written


example_project = PBXProject.projectWithFile_(u'/Users/toulouse/code/ATToolkit/Tools/NewProject.xcodeproj')


#unarchiver = PBXPListUnarchiver.alloc().initWithPListArchive_(u'/Users/toulouse/code/ATToolkit/Tools/ATBase.xcodeproj')



#targets = project.targets()
#target = targets[0]
